{"version":3,"sources":["node_modules/browser-pack/_prelude.js","elements/elix-mixins/globals.js","elements/elix-mixins/src/SimpleAttributeMixin.js","elements/elix-mixins/src/SimpleTemplateMixin.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_SimpleAttributeMixin","_SimpleTemplateMixin","window","Elix","SimpleAttributeMixin","_SimpleAttributeMixin2","default","SimpleTemplateMixin","_SimpleTemplateMixin2","base","SimpleAttribute","_base","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","attributeName","oldValue","newValue","_get","prototype","HTMLElement","attribute","SimpleTemplate","_this","template","root","attachShadow","mode","innerHTML","className"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,mECOA,GAAAK,GAAAX,EAAA,qCACAY,EAAAZ,EAAA,mCAEAa,QAAOC,KAAOD,OAAOC,SAErBD,OAAOC,KAAKC,qBAAZC,EAAAC,QACAJ,OAAOC,KAAKI,oBAAZC,EAAAF,qqBCNe,QAASF,GAAqBK,GAAM,GAK3CC,GAL2C,SAAAC,GAAA,QAAAD,KAAA,MAAAE,GAAAC,KAAAH,GAAAI,EAAAD,MAAAH,EAAAK,WAAAC,OAAAC,eAAAP,IAAAQ,MAAAL,KAAAM,YAAA,MAAAC,GAAAV,EAAAC,GAAAU,EAAAX,IAAAY,IAAA,2BAAAC,MAAA,SAUtBC,EAAeC,EAAUC,GACjDC,EAAAjB,EAAAkB,UAAAb,WAAAC,OAAAC,eAAAP,EAAAkB,WAAA,2BAAAf,OAAsCc,EAAAjB,EAAAkB,UAAAb,WAAAC,OAAAC,eAAAP,EAAAkB,WAAA,2BAAAf,MAAAjB,KAAAiB,MAGlCW,IAAiBX,SAAUW,IAAiBK,aAAYD,aACvDf,KAAKW,GAAiBE,MAfmBJ,IAAA,mBAAAC,MAAA,SA+B9BO,EAAWP,QA/BmBb,GAKnBD,EAgC9B,OAAOC,+iBArCeN,mmBCCT,QAASG,GAAoBE,GAAM,GAK1CsB,GAL0C,SAAApB,GAO9C,QAAAoB,KAAcnB,EAAAC,KAAAkB,EAAA,IAAAC,GAAAlB,EAAAD,MAAAkB,EAAAhB,WAAAC,OAAAC,eAAAc,IAAAnC,KAAAiB,OAEPoB,EAAWD,EAAKC,QACtB,IAAIA,EAAU,CACX,GAAMC,GAAOF,EAAKG,cAAeC,KAAM,QACvCF,GAAKG,UAAYJ,EALP,MAAAD,GAPgC,MAAAZ,GAAAW,EAAApB,GAAAU,EAAAU,IAAAT,IAAA,eAAAC,MAAA,SA6BjCe,EAAWf,QA7BsBQ,GAKnBtB,EA8B7B,OAAOsB,uTAnCexB","file":"elix-mixins.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * This file is transpiled to create an ES5-compatible distribution in which\n * the package's main feature(s) are available via the window.Basic global.\n * If you're already using ES6 yourself, ignore this file, and instead import\n * the source file(s) you want from the src folder.\n */\n\nimport SimpleAttributeMixin from './src/SimpleAttributeMixin';\nimport SimpleTemplateMixin from './src/SimpleTemplateMixin';\n\nwindow.Elix = window.Elix || {};\n\nwindow.Elix.SimpleAttributeMixin = SimpleAttributeMixin;\nwindow.Elix.SimpleTemplateMixin = SimpleTemplateMixin;\n","/**\n * Mixin which adds simplistic mapping of attributes to properties.\n *\n * @module SimpleAttributeMixin\n * @param base {Class} the base class to extend\n * @returns {Class} the extended class\n */\nexport default function SimpleAttributeMixin(base) {\n\n  /**\n   * The class prototype added by the mixin.\n   */\n  class SimpleAttribute extends base {\n    \n    /*\n     * Handle a change to the attribute with the given name.\n     */\n    attributeChangedCallback(attributeName, oldValue, newValue) {\n  \t  if (super.attributeChangedCallback) { super.attributeChangedCallback(); }\n  \t  // If the attribute name corresponds to a property name, set the property.\n  \t  // Ignore standard HTMLElement properties handled by the DOM.\n  \t  if (attributeName in this && !(attributeName in HTMLElement.prototype)) {\n          this[attributeName] = newValue;\n  \t  }\n    }\n\n    /**\n     * Set/unset the attribute with the indicated name.\n     *\n     * This method exists primarily to handle the case where an element wants to\n     * set a default property value that should be reflected as an attribute. An\n     * important limitation of custom element consturctors is that they cannot\n     * set attributes. A call to `reflectAttribute` during the constructor will\n     * be deferred until the element is connected to the document.\n     *\n     * @param {string} attribute - The name of the *attribute* (not property) to set.\n     * @param {object} value - The value to set. If null, the attribute will be removed.\n     */\n    reflectAttribute(attribute, value) {\n      // For documentation purposes only\n    }\n\n  }\n\n  return SimpleAttribute;\n}\n","/**\n * Mixin which adds a simplistic means of cloning a string template into a new\n * shadow root.\n *\n * @module SimpleTemplateMixin\n * @param base {Class} the base class to extend\n * @returns {Class} the extended class\n */\nexport default function SimpleTemplateMixin(base) {\n\n  /**\n   * The class prototype added by the mixin.\n   */\n  class SimpleTemplate extends base {\n\n    constructor() {\n\t    super();\n\t    const template = this.template;\n\t    if (template) {\n        const root = this.attachShadow({ mode: 'open' });\n        root.innerHTML = template;\n\t    }\n    }\n\n    /**\n     * Set/unset the class with the indicated name.\n     *\n     * This method exists primarily to handle the case where an element wants to\n     * set a default property value that should be reflected as as class. An\n     * important limitation of custom element consturctors is that they cannot\n     * set attributes, including the `class` attribute. A call to\n     * `reflectClass` during the constructor will be deferred until the element\n     * is connected to the document.\n     *\n     * @param {string} className - The name of the class to set.\n     * @param {object} value - True to set the class, false to remove it.\n     */\n    reflectClass(className, value) {\n      // For documentation purposes only\n    }\n\n  }\n\n  return SimpleTemplate;\n}\n"]}