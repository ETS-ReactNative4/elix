{"version":3,"sources":["webpack:///elix-mixins.min.js","webpack:///webpack/bootstrap 3ccd277764c8076db9f1","webpack:///./elements/elix-mixins/globals.js","webpack:///./elements/elix-mixins/src/SimpleAttributeMixin.js","webpack:///./elements/elix-mixins/src/SimpleTemplateMixin.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_SimpleAttributeMixin","_SimpleAttributeMixin2","_SimpleTemplateMixin","_SimpleTemplateMixin2","window","Elix","SimpleAttributeMixin","SimpleTemplateMixin","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","base","SimpleAttribute","_base","this","getPrototypeOf","apply","arguments","_createClass","key","attributeName","oldValue","newValue","_get","HTMLElement","attribute","defineProperty","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getter","SimpleTemplate","_this","template","root","attachShadow","mode","innerHTML","className"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/BI,EAAOD,QAAUH,EAAoB,IAKhC,SAASI,EAAQD,EAASH,GAE/B,YAUA,SAASW,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GExDxF,GAAAG,GAAAf,EAAA,GFkDKgB,EAAyBL,EAAuBI,GEjDrDE,EAAAjB,EAAA,GFqDKkB,EAAwBP,EAAuBM,EEnDpDE,QAAOC,KAAOD,OAAOC,SAErBD,OAAOC,KAAKC,qBAAZL,EAAAF,QACAK,OAAOC,KAAKE,oBAAZJ,EAAAJ,SFkEM,SAASV,EAAQD,GAEtB,YAYA,SAASoB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMrB,GAAQ,IAAKqB,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOtB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BqB,EAAPrB,EAElO,QAASuB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIN,WAAU,iEAAoEM,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GG1Fnd,QAASX,GAAqBsB,GAAM,GAK3CC,GAL2C,SAAAC,GAAA,QAAAD,KAAA,MAAArB,GAAAuB,KAAAF,GAAAjB,EAAAmB,MAAAF,EAAAF,WAAAR,OAAAa,eAAAH,IAAAI,MAAAF,KAAAG,YAAA,MAAAnB,GAAAc,EAAAC,GAAAK,EAAAN,IAAAO,IAAA,2BAAAd,MAAA,SAUtBe,EAAeC,EAAUC,GACjDC,EAAAX,EAAAX,UAAAS,WAAAR,OAAAa,eAAAH,EAAAX,WAAA,2BAAAa,OAAsCS,EAAAX,EAAAX,UAAAS,WAAAR,OAAAa,eAAAH,EAAAX,WAAA,2BAAAa,MAAAvC,KAAAuC,MAGlCM,IAAiBN,SAAUM,IAAiBI,aAAYvB,aACvDa,KAAKM,GAAiBE,MAfmBH,IAAA,mBAAAd,MAAA,SA+B9BoB,EAAWpB,QA/BmBO,GAKnBD,EAgC9B,OAAOC,GHuCRV,OAAOwB,eAAevD,EAAS,cAC7BkC,OAAO,GAGT,IAAIa,GAAe,WAAc,QAASS,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAW1B,WAAa0B,EAAW1B,aAAc,EAAO0B,EAAWxB,cAAe,EAAU,SAAWwB,KAAYA,EAAWzB,UAAW,GAAML,OAAOwB,eAAeE,EAAQI,EAAWb,IAAKa,IAAiB,MAAO,UAAUvC,EAAawC,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBlC,EAAYQ,UAAWgC,GAAiBC,GAAaP,EAAiBlC,EAAayC,GAAqBzC,MAE5hB8B,EAAO,QAASY,GAAIC,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAAStC,UAAW,IAAIuC,GAAOtC,OAAOuC,yBAAyBL,EAAQC,EAAW,IAAaK,SAATF,EAAoB,CAAE,GAAIG,GAASzC,OAAOa,eAAeqB,EAAS,OAAe,QAAXO,EAAmB,OAAkCR,EAAIQ,EAAQN,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKnC,KAAgB,IAAIuC,GAASJ,EAAKL,GAAK,IAAeO,SAAXE,EAA4C,MAAOA,GAAOrE,KAAK+D,GAE5dnE,GAAQW,QGpFeO,GH+JlB,SAASjB,EAAQD,GAEtB,YAUA,SAASoB,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMrB,GAAQ,IAAKqB,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOtB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BqB,EAAPrB,EAElO,QAASuB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIN,WAAU,iEAAoEM,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GI9Knd,QAASV,GAAoBqB,GAAM,GAK1CkC,GAL0C,SAAAhC,GAO9C,QAAAgC,KAActD,EAAAuB,KAAA+B,EAAA,IAAAC,GAAAnD,EAAAmB,MAAA+B,EAAAnC,WAAAR,OAAAa,eAAA8B,IAAAtE,KAAAuC,OAEPiC,EAAWD,EAAKC,QACtB,IAAIA,EAAU,CACX,GAAMC,GAAOF,EAAKG,cAAeC,KAAM,QACvCF,GAAKG,UAAYJ,EALP,MAAAD,GAPgC,MAAAhD,GAAA+C,EAAAhC,GAAAK,EAAA2B,IAAA1B,IAAA,eAAAd,MAAA,SA6BjC+C,EAAW/C,QA7BsBwC,GAKnBlC,EA8B7B,OAAOkC,GJ+HR3C,OAAOwB,eAAevD,EAAS,cAC7BkC,OAAO,GAGT,IAAIa,GAAe,WAAc,QAASS,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAW1B,WAAa0B,EAAW1B,aAAc,EAAO0B,EAAWxB,cAAe,EAAU,SAAWwB,KAAYA,EAAWzB,UAAW,GAAML,OAAOwB,eAAeE,EAAQI,EAAWb,IAAKa,IAAiB,MAAO,UAAUvC,EAAawC,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBlC,EAAYQ,UAAWgC,GAAiBC,GAAaP,EAAiBlC,EAAayC,GAAqBzC,KAEhiBtB,GAAQW,QIxKeQ","file":"elix-mixins.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _SimpleAttributeMixin = __webpack_require__(2);\n\t\n\tvar _SimpleAttributeMixin2 = _interopRequireDefault(_SimpleAttributeMixin);\n\t\n\tvar _SimpleTemplateMixin = __webpack_require__(3);\n\t\n\tvar _SimpleTemplateMixin2 = _interopRequireDefault(_SimpleTemplateMixin);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\t * This file is transpiled to create an ES5-compatible distribution in which\n\t * the package's main feature(s) are available via the window.Basic global.\n\t * If you're already using ES6 yourself, ignore this file, and instead import\n\t * the source file(s) you want from the src folder.\n\t */\n\t\n\twindow.Elix = window.Elix || {};\n\t\n\twindow.Elix.SimpleAttributeMixin = _SimpleAttributeMixin2.default;\n\twindow.Elix.SimpleTemplateMixin = _SimpleTemplateMixin2.default;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\texports.default = SimpleAttributeMixin;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Mixin which adds simplistic mapping of attributes to properties.\n\t *\n\t * @module SimpleAttributeMixin\n\t * @param base {Class} the base class to extend\n\t * @returns {Class} the extended class\n\t */\n\tfunction SimpleAttributeMixin(base) {\n\t\n\t  /**\n\t   * The class prototype added by the mixin.\n\t   */\n\t  var SimpleAttribute = function (_base) {\n\t    _inherits(SimpleAttribute, _base);\n\t\n\t    function SimpleAttribute() {\n\t      _classCallCheck(this, SimpleAttribute);\n\t\n\t      return _possibleConstructorReturn(this, (SimpleAttribute.__proto__ || Object.getPrototypeOf(SimpleAttribute)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(SimpleAttribute, [{\n\t      key: \"attributeChangedCallback\",\n\t\n\t\n\t      /*\n\t       * Handle a change to the attribute with the given name.\n\t       */\n\t      value: function attributeChangedCallback(attributeName, oldValue, newValue) {\n\t        if (_get(SimpleAttribute.prototype.__proto__ || Object.getPrototypeOf(SimpleAttribute.prototype), \"attributeChangedCallback\", this)) {\n\t          _get(SimpleAttribute.prototype.__proto__ || Object.getPrototypeOf(SimpleAttribute.prototype), \"attributeChangedCallback\", this).call(this);\n\t        }\n\t        // If the attribute name corresponds to a property name, set the property.\n\t        // Ignore standard HTMLElement properties handled by the DOM.\n\t        if (attributeName in this && !(attributeName in HTMLElement.prototype)) {\n\t          this[attributeName] = newValue;\n\t        }\n\t      }\n\t\n\t      /**\n\t       * Set/unset the attribute with the indicated name.\n\t       *\n\t       * This method exists primarily to handle the case where an element wants to\n\t       * set a default property value that should be reflected as an attribute. An\n\t       * important limitation of custom element consturctors is that they cannot\n\t       * set attributes. A call to `reflectAttribute` during the constructor will\n\t       * be deferred until the element is connected to the document.\n\t       *\n\t       * @param {string} attribute - The name of the *attribute* (not property) to set.\n\t       * @param {object} value - The value to set. If null, the attribute will be removed.\n\t       */\n\t\n\t    }, {\n\t      key: \"reflectAttribute\",\n\t      value: function reflectAttribute(attribute, value) {\n\t        // For documentation purposes only\n\t      }\n\t    }]);\n\t\n\t    return SimpleAttribute;\n\t  }(base);\n\t\n\t  return SimpleAttribute;\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = SimpleTemplateMixin;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Mixin which adds a simplistic means of cloning a string template into a new\n\t * shadow root.\n\t *\n\t * @module SimpleTemplateMixin\n\t * @param base {Class} the base class to extend\n\t * @returns {Class} the extended class\n\t */\n\tfunction SimpleTemplateMixin(base) {\n\t\n\t  /**\n\t   * The class prototype added by the mixin.\n\t   */\n\t  var SimpleTemplate = function (_base) {\n\t    _inherits(SimpleTemplate, _base);\n\t\n\t    function SimpleTemplate() {\n\t      _classCallCheck(this, SimpleTemplate);\n\t\n\t      var _this = _possibleConstructorReturn(this, (SimpleTemplate.__proto__ || Object.getPrototypeOf(SimpleTemplate)).call(this));\n\t\n\t      var template = _this.template;\n\t      if (template) {\n\t        var root = _this.attachShadow({ mode: 'open' });\n\t        root.innerHTML = template;\n\t      }\n\t      return _this;\n\t    }\n\t\n\t    /**\n\t     * Set/unset the class with the indicated name.\n\t     *\n\t     * This method exists primarily to handle the case where an element wants to\n\t     * set a default property value that should be reflected as as class. An\n\t     * important limitation of custom element consturctors is that they cannot\n\t     * set attributes, including the `class` attribute. A call to\n\t     * `reflectClass` during the constructor will be deferred until the element\n\t     * is connected to the document.\n\t     *\n\t     * @param {string} className - The name of the class to set.\n\t     * @param {object} value - True to set the class, false to remove it.\n\t     */\n\t\n\t\n\t    _createClass(SimpleTemplate, [{\n\t      key: 'reflectClass',\n\t      value: function reflectClass(className, value) {\n\t        // For documentation purposes only\n\t      }\n\t    }]);\n\t\n\t    return SimpleTemplate;\n\t  }(base);\n\t\n\t  return SimpleTemplate;\n\t}\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// elix-mixins.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3ccd277764c8076db9f1","/*\n * This file is transpiled to create an ES5-compatible distribution in which\n * the package's main feature(s) are available via the window.Basic global.\n * If you're already using ES6 yourself, ignore this file, and instead import\n * the source file(s) you want from the src folder.\n */\n\nimport SimpleAttributeMixin from './src/SimpleAttributeMixin';\nimport SimpleTemplateMixin from './src/SimpleTemplateMixin';\n\nwindow.Elix = window.Elix || {};\n\nwindow.Elix.SimpleAttributeMixin = SimpleAttributeMixin;\nwindow.Elix.SimpleTemplateMixin = SimpleTemplateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./elements/elix-mixins/globals.js","/**\n * Mixin which adds simplistic mapping of attributes to properties.\n *\n * @module SimpleAttributeMixin\n * @param base {Class} the base class to extend\n * @returns {Class} the extended class\n */\nexport default function SimpleAttributeMixin(base) {\n\n  /**\n   * The class prototype added by the mixin.\n   */\n  class SimpleAttribute extends base {\n    \n    /*\n     * Handle a change to the attribute with the given name.\n     */\n    attributeChangedCallback(attributeName, oldValue, newValue) {\n  \t  if (super.attributeChangedCallback) { super.attributeChangedCallback(); }\n  \t  // If the attribute name corresponds to a property name, set the property.\n  \t  // Ignore standard HTMLElement properties handled by the DOM.\n  \t  if (attributeName in this && !(attributeName in HTMLElement.prototype)) {\n          this[attributeName] = newValue;\n  \t  }\n    }\n\n    /**\n     * Set/unset the attribute with the indicated name.\n     *\n     * This method exists primarily to handle the case where an element wants to\n     * set a default property value that should be reflected as an attribute. An\n     * important limitation of custom element consturctors is that they cannot\n     * set attributes. A call to `reflectAttribute` during the constructor will\n     * be deferred until the element is connected to the document.\n     *\n     * @param {string} attribute - The name of the *attribute* (not property) to set.\n     * @param {object} value - The value to set. If null, the attribute will be removed.\n     */\n    reflectAttribute(attribute, value) {\n      // For documentation purposes only\n    }\n\n  }\n\n  return SimpleAttribute;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./elements/elix-mixins/src/SimpleAttributeMixin.js","/**\n * Mixin which adds a simplistic means of cloning a string template into a new\n * shadow root.\n *\n * @module SimpleTemplateMixin\n * @param base {Class} the base class to extend\n * @returns {Class} the extended class\n */\nexport default function SimpleTemplateMixin(base) {\n\n  /**\n   * The class prototype added by the mixin.\n   */\n  class SimpleTemplate extends base {\n\n    constructor() {\n\t    super();\n\t    const template = this.template;\n\t    if (template) {\n        const root = this.attachShadow({ mode: 'open' });\n        root.innerHTML = template;\n\t    }\n    }\n\n    /**\n     * Set/unset the class with the indicated name.\n     *\n     * This method exists primarily to handle the case where an element wants to\n     * set a default property value that should be reflected as as class. An\n     * important limitation of custom element consturctors is that they cannot\n     * set attributes, including the `class` attribute. A call to\n     * `reflectClass` during the constructor will be deferred until the element\n     * is connected to the document.\n     *\n     * @param {string} className - The name of the class to set.\n     * @param {object} value - True to set the class, false to remove it.\n     */\n    reflectClass(className, value) {\n      // For documentation purposes only\n    }\n\n  }\n\n  return SimpleTemplate;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./elements/elix-mixins/src/SimpleTemplateMixin.js"],"sourceRoot":""}